function phi = phi_generator(phiIni, blocksNb)
% phiIni: Initial dictionary
% blocksNb: # of blocks
% phi: Simulated dictionary randomly generated by drawing from  i.i.d. 
% Gaussian matrices and normalizing the resulting columns to have norm 1.

n = size(phiIni, 2);
blocks = reshape(repmat(1 : blocksNb , n/blocksNb , 1) , 1 , [])';
weights = rand(blocksNb,1) + 0.1;
W = spdiags(1./weights(blocks), 0, n, n); % Weight per block
A = matrix_normalizer(phiIni*W); % normalize columns

A_Ort = zeros(size(A));
for i = 1 : blocksNb
    A_Ort(: , (i - 1) * n/blocksNb + 1 : i * n/blocksNb) = orth(A(: , (i - 1) * n/blocksNb + 1 : i * n/blocksNb));
end

phi = {A, A_Ort};

function A = matrix_normalizer(B)

A = nan(size(B));
for i = 1 : size(B, 2)
    A(:,i) = B(:,i)/norm(B(:,i));
end
